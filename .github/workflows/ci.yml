name: zs-yaml CI/CD
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  test-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools-scm
      - name: Install zs-yaml in dev mode
        run: |
          pip install -e .
      - name: Generate schema API for team example
        run: |
          cd examples/team
          zserio team.zs -withTypeInfoCode -python zs_gen_api
          echo "PYTHONPATH=$PYTHONPATH:$PWD/zs_gen_api" >> $GITHUB_ENV
      - name: Test team example transformation
        run: |
          cd examples/team
          zs-yaml team1.yaml team1_test_out.bin
          if [ $? -eq 0 ]; then
            echo "Transformation successful"
          else
            echo "Transformation failed"
            exit 1
          fi
      - name: Test pyobj_to_yaml functionality
        run: |
          cd examples/team
          python test_pyobj_to_yaml.py
          if [ $? -eq 0 ]; then
            echo "pyobj_to_yaml tests successful"
          else
            echo "pyobj_to_yaml tests failed"
            exit 1
          fi
      - name: Test all conversion functions
        run: |
          cd examples/team
          python test_all_conversions.py
          if [ $? -eq 0 ]; then
            echo "All conversion tests successful"
          else
            echo "Conversion tests failed"
            exit 1
          fi
      - name: Build package
        run: |
          python -m build
      - name: Check distribution
        run: |
          twine check dist/*
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.KE_PYPI_TOKEN }}
        run: |
          twine upload dist/*
